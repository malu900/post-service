# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches-ignore:
      - 'master'
      - 'release*'
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
    
jobs:
  build:
    name: build app
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Maven Package
      run: mvn -B clean package -DskipTests
    - name: Maven test
      run: mvn test
    - name: Maven Verify
      run: mvn -B clean verify
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-18.04
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: SonarCloud Scan
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: deploy app
    needs: [build, sonar]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          TIME_STAMP: $(date +%s)
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: build the docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/comment-service
      - name: Docker push
        run: docker push ${{secrets.DOCKER_USER}}/comment-service
  digitalocean:
    name: Install doctl
    uses: digitalocean/action-doctl@v2
    with:
      token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#    name: Install doctl
#    uses: digitalocean/action-doctl@v2
#    with:
#      token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
